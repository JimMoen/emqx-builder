name: Build docker images

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            otp: ${{ steps.otp.outputs.version }}
        steps:
        - uses: actions/checkout@v2
        - name: get otp_version
          id: otp
          run: |
            otp_version=$(cat ./OTP_VERSION | jq -R -s -c 'split("\n")[:-1]')
            echo "::set-output name=version::$otp_version"

    build:
        runs-on: ubuntu-latest
        needs: prepare

        strategy:
            fail-fast: false
            matrix:
              otp: ${{ fromJSON(needs.prepare.outputs.otp) }}
              platform:
                - [ubuntu20.04, "linux/amd64,linux/arm64"]
                - [ubuntu18.04, "linux/amd64,linux/arm64"]
                - [ubuntu16.04, "linux/amd64,linux/arm64"]
                - [debian10   , "linux/amd64,linux/arm64"]
                - [debian9    , "linux/amd64,linux/arm64"]
                - [centos8    , "linux/amd64,linux/arm64"]
                - [centos7    , "linux/amd64,linux/arm64"]
                - [centos6    , "linux/amd64"]
                - [opensuse   , "linux/amd64"]
                - [raspbian10 , "linux/arm64"]
                - [raspbian9  , "linux/arm64"]
                - [alpine3.14 , "linux/amd64,linux/arm64"]

        steps:
        - uses: actions/checkout@v2
        - uses: docker/setup-buildx-action@v1
        - uses: docker/setup-qemu-action@v1
          with:
            image: tonistiigi/binfmt:latest
            platforms: all
        - uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ github.token }}
        - name: get image
          id: image
          run: |
              image="ghcr.io/${{ github.repository }}:${{ matrix.otp }}-${{ matrix.platform[0] }}"
              docker pull $image || true

              if ${{ startsWith(github.ref, 'refs/tags/') }}; then
                version=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
                vsn_image="ghcr.io/${{ github.repository }}/${version}:${{ matrix.otp }}-${{ matrix.platform[0] }}"
                image="${image},$vsn_image"
              fi

              echo "::set-output name=image::$image"
        - uses: docker/build-push-action@v2
          with:
            push: true
            pull: true
            cache-from: ${{ steps.image.outputs.image }}
            platforms: ${{ matrix.platform[1] }}
            tags: ${{ steps.image.outputs.image }}
            build-args: |
              OTP_VERSION=${{ matrix.otp }}
            file: ${{ matrix.platform[0] }}/Dockerfile
            context: .

    release:
        runs-on: ubuntu-latest
        needs: build

        if: startsWith(github.ref, 'refs/tags/')

        steps:
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ github.token }}
          with:
            tag_name: ${{ github.ref }}
            release_name: EMQ X Builder Helper ${{ github.ref }} Released
            body: EMQ X Builder Helper ${{ github.ref }} Released
            draft: false
            prerelease: false
